<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-4.1.xsd">
                    
      <!-- We will be defining all security related configurations in this file -->             
       
      <!--  <security:http auto-config="true" use-expressions="true">
          
       </security:http> -->
       <!-- <http pattern="/login" security="none"/>
       
       <http use-expressions="true">
               <intercept-url pattern="/**" access="isAuthenticated()"/>this means all URLin this app will be checked user is authenticated 
               <form-login login-page="/login" default-target-url="/index" authentication-failure-url="/login"/>we will just use thebuilt in  form login page in Spring  
               <logout logout-url="/logout" logout-success-url="/index"/>thelogout url will in JSP  
       </http>             
       
       <authentication-manager>
           <authentication-provider>
              Noramally in this part you will declare the source of your users  
              But for simplicity,we will hard-code the users.this is very useful while testing setup 
              <user-service>
                <user name="pritam" password="pritam" authorities="Admin, User"/>
                <user name="pritesh" password="pritesh" authorities="User"/>
                
              </user-service>
           </authentication-provider>
       </authentication-manager>          -->    
                    
</beans:beans>